#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class TreeNode{
    public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
        ~TreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };

*************************************************************/
TreeNode<int>* solve (vector<int>&preOrder , int index , int bound){
    if(index>=preOrder.size() || preOrder[index]>bound){
        return NULL;
    }
    TreeNode<int>*root = new TreeNode<int>(preOrder[index]);
    index++;
    root->left = solve(preOrder , index , root->data);
    root->right = solve(preOrder , index , bound);

    return root;
}
TreeNode<int>* preOrderTree(vector<int> &preOrder){
    // Write your code here.
    sort(preOrder.begin() , preOrder.end());
    int i = 0;
    return solve(preOrder , i , INT_MAX);
}
