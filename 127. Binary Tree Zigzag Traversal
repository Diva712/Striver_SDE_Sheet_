#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    bool ltor = true;
    vector<int>ans;
    queue<BinaryTreeNode<int>*>q;
    if(root==NULL){
        return ans;
    }
    q.push(root);
    while(!q.empty()){
        int size = q.size();
        vector<int>row(size);
        for(int i=0; i<size; i++){
            BinaryTreeNode<int>*node = q.front();
            q.pop();
            if(ltor == true)
            {
                row[i] = node->data;
            }
            else{
                row[size-i-1] = node->data;
            }

            if(node->left!=NULL){
                q.push(node->left);
            }
            if(node->right!=NULL){
                q.push(node->right);
            }
        }
        for(auto it : row){
            ans.push_back(it);
        }
        ltor = !(ltor);
    }
    return ans;
}
