#include <bits/stdc++.h> 

void findPath(int x, int y, vector<vector<int>> &maze, int n, vector<vector<int>> &visited, vector<vector<int>> &ans) {
  // Base Case
  if(x < 0 || y < 0 || x >= n || y >= n || visited[x][y] == 1 || maze[x][y] == 0){
    return;
  }
  if (x == n - 1 && y == n - 1) {
    vector<int> temp;
    visited[x][y] = 1;
    
    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++)
        temp.push_back(visited[i][j]);

    visited[x][y] = 0;
    ans.push_back(temp);
    return;
  }
  visited[x][y]=1;
  findPath(x-1,y,maze,n,visited,ans);
   findPath(x+1,y,maze,n,visited,ans);
    findPath(x,y-1,maze,n,visited,ans);
     findPath(x,y+1,maze,n,visited,ans);
  visited[x][y]=0;
}
vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n){
  // Write your code here.

  vector<vector<int>> visited(n, vector<int> (n, 0));
  vector<vector<int>> ans;

  if(maze[0][0] == 0) return ans;
  findPath(0, 0, maze, n, visited, ans);

  return ans;
}
