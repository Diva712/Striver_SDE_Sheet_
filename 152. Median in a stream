#include<bits/stdc++.h>
vector<int> findMedian(vector<int> &arr, int n){
	
	// Write your code here 
	priority_queue<int>pq1;
	priority_queue<int,vector<int>,greater<int>>pq2;
	vector<int>ans;
	for(int i=0; i<n; i++){
		if(pq1.empty() || arr[i]<=pq1.top()){
			pq1.push(arr[i]);
		}
		else{
			pq2.push(arr[i]);
		}

		if(pq1.size()>pq2.size()+1){
			int x = pq1.top();
			pq1.pop();
			pq2.push(x);
		}
		else if(pq2.size() > pq1.size()+1){
			int y = pq2.top();
			pq2.pop();
			pq1.push(y);
		}

		if(pq1.size() == pq2.size()){
			ans.push_back((pq1.top() + pq2.top())/2);
		}
		else{
			if(pq1.size()>pq2.size()){
				ans.push_back(pq1.top());
			}
			else{
				ans.push_back(pq2.top());
			}
		}

	}
	return ans;

}
