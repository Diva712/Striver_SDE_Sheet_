#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
void inordertraversal(BinaryTreeNode<int>*root , vector<int>&in){
    if(root == NULL){
        return;
    }
    inordertraversal(root->left , in);
    in.push_back(root->data);
    inordertraversal(root->right , in);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    // Write your code here
    vector<int>in;
    inordertraversal(root , in);
    int low = 0;
    int high = in.size()-1;
    while(low<high){
        if(in[low] + in[high] == k){
            return true;
        }
        else if(in[low] + in[high] > k){
            high--;
        }
        else{
            low++;
        }
    }
    return false;
}
